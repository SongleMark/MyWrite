1.int fun(int score[],int m,int below[]) 
{int i,k=0,aver=0; 
for(i-0;iaver+=score; 
aver/=m; 
for(i=0,iif(score{below[k]=score; 
k++;} 
return k;} 

2.void fun(int *a,int *n) 
{int i,j=0; 
for(i=2;i<1000;i++) 
if((i%7==0£¯£¯i%11£½£½0))&i%77!=0) 
a[j++]=i; 
*n=j;} 


3. void fun(int x, int pp[],int *n) 
{int i=1,j=0,k=0,*t=pp; 
for(i=0;i<=x;i++) 
if(i%2!=0) 
{t[j]=i; 
j++;} 
for(i=0;iif(x%t==0) 
{pp[k]=t; 
k++;} 
*n=k;} 


4. void fun(char *tt,int pp[]) 
{int i; 
for(i=0;i<26;i++) 
pp=0; 
while (*tt) 
{switch(*tt) 
{case¡¯a¡¯:pp[0]++;break; 
case¡¯b¡¯:pp[1]++;break; 
case¡¯c¡¯:pp[2]++;break; 
case¡¯d¡¯:pp[3]++;break; 
case¡¯e¡¯:pp[4]++;break; 
case¡¯f¡¯:pp[5]++;break; 
case¡¯g¡¯:pp[6]++;break; 
case¡¯h¡¯:pp[7]++;break; 
case¡¯i¡¯:pp[8]++;break; 
case¡¯j¡¯:pp[9]++;break; 
case¡¯k¡¯:pp[10]++;break; 
case¡¯l¡¯:pp[11]++;break; 
case¡¯m¡¯:pp[12]++;break; 
case¡¯n¡¯:pp[13]++;break; 
case¡¯o¡¯:pp[14]++;break; 
case¡¯p¡¯:pp[15]++;break; 
case¡¯q¡¯:pp[16]++;break; 
case¡¯r¡¯:pp[17]++;break; 
case¡¯s¡¯:pp[18]++;break; 
case¡¯t¡¯:pp[19]++;break; 
case¡¯u¡¯:pp[20]++;break; 
case¡¯v¡¯:pp[21]++;break; 
case¡¯w¡¯:pp[22]++;break; 
case¡¯x¡¯:pp[23]++;break; 
case¡¯y¡¯:pp[24]++;break; 
case¡¯z¡¯:pp[25]++;break;} 
tt++;} 
}

5. void fun(int m,int k,int xx[]) 
{int g=0,i,j,flag=1; 
for(i=m+1;i{for(j=2;j{if (i%j!=0) 
flag=1; 
else 
{flag=0; 
break;} 
} 
if (flag==1&j>=i) 
{if (k>0) 
{xx[g++]=i; 
k--;} 
else 
break;}}} 


6. void fun(char a[],char b[],int n) 
{int i,j=0; 
for (i=0;iif(i!=n) 
{b[j]=a; 
j++;} 
b[j]=¡¯\0¡¯;} 


7. void fun(int *s,int t,int*k) 
{int i,max; 
max=s[0]; 
for (i=0;iif (s>max) 
{max=s; 
*k=i; }} 


8. float fun(int n) 
{int i; 
float s=1.0,t=1.0; 
for (i=2;i<=n;i++) 
{t=t+i; 
s=s+1/t;} 
return s;}

9. p=m!/n!(m-n)! 
float fun(int m,int n) 
{float p,t=1.0; 
int i; 
for (i=1;i<=m;i++) 
t=t*i; 
p=t; 
for (t=1.0,i=1;i<=n;i++) 
t=t*i; 
p=p/t; 
for(t=1.0,i=1;it=t*i; 
p=p/t; 
return p;} 


10. folat fun() 
{float x1=0.0,x0; 
do 
{x0=x1; 
x1=cos(x0); } 
while (fabs(x0-x1)>=1e-6); 
return x1;} 


11. int fun(int a[][N]) 
{int i,j; 
for(i=0;ifor(j=0;ja[j]=0;} 


12.double fun (int w[][N]) 
{int i,j,k=0; 
double s=0.0; 
for (j=0;j{s+=w[0][j]; 
k++;} 
for (j=0;j{s+=w[N-1][j]; 
k++;} 
for (i=1;i<=N-2;i++) 
{s+=w[0]; 
k++;} 
return s/=k;} 


13. void fun(int tt[M][N],int pp[N]) 
{int i,j,min; 
for (j=0;j{min=tt[0][j]; 
for (i=0;i{if (tt[j]min=tt[j];} 
pp[j]=min;}} 


14. int fun (int a[M][N]) 
{int i,j,s=0; 
for (j=0;j{s+=a[0][j]; 
s+=a[M-1][j];} 
for (i=1;i<=M-2;i++) 
{s+=a[0]; 
s+=a[N-1];} 
return s;}

15. unsigned fun(unsigned w) 
{unsigned t,s=0,s1=1,p=0; 
t=w; 
while(t>10) 
{if(t/10) 
p=t%10; 
s=s+p*s1; 
s1=s1*10; 
t=t/10; } 
return s;} 


16. float fun (float h) 
{long t; 
float s; 
h=h*1000; 
t=(h+5)/10; 
s=(float)t/100.0; 
return s;} 


17. void fun(char *s) 
{char ch; 
int i,m,n; 
i=0; 
m=n=strlen(s)-1; 
while(i<(n+1)/2) 
{ch=s; 
s=s[m]; 
s[m]=ch; 
i++; 
m--;}} 


18. void fun(int array[3][3]) 
{int i,j,temp; 
for (i=0;i<3;i++) 
{temp=array[j]; 
array[j]=array[j]; 
array[j]=temp; }} 


19. void fun(char s[],int c) 
{int i=0; 
char*p; 
p=s; 
while(*p) 
{if(*p!=c) 
{s=*p; 
i++;} 
p++;} 
s=¡¯\0¡¯;} 


20. int fun(int lim,int aa[MAX]) 
{int k=0,i,j; 
for(i=lim;i>1;i--) 
{for(j=2;jif(i%j==0) 
break; 
else 
continue; 
if(j>=i) 
{aa[k]=i; 
k++;}} 
return k++;}

21.void fun(char *s,int num) 
{char t; 
int i,j; 
for (i=1;ifor (j=i+1;jif(s{t=s; 
s=s[j]; 
s[j]=t;}} 


22. double fun (STREC *h) 
{ double max; 
STREC *q=h; 
max=h->s; 
do 
{if(q->s>max) 
max=q->s; 
q=q->next; } 
while(q!=0); 
return max;} 


23. int fun(char *str) 
{int i,n=0,fg=1; 
char *p=str; 
while (*p) 
{n++; 
p++;} 
for (i=0;iif (str==str[n-1-i]); 
else 
{fg=0; 
break;} 
return fg;} 


24. long fun(char *p) 
{long s=0,t; 
int i=0,j,in=strlen(p),k,s1; 
if(p[0]==¡¯-¡¯) 
i++; 
for(j=i;j<=n-1;j++) 
{t=p[j]-¡¯0¡¯; 
s1=10; 
for (k=j;kt*=s1; 
s+=t; } 
if(p[0]==¡¯-¡¯) 
return -s; 
else 
return s;}

25. char *fun(char *s,char *t) 
{char *p,*t1=t,*s1=s; 
int n=0,m=0; 
while(*s1) 
{n++; 
s1++;} 
while(*t1) 
{m++; 
t1++;} 
if(n>=m) 
p=s; 
else 
p=t; 
return p;} 


26. double fun(double eps) 
{double s; 
float n,t,pi; 
t=1;pi=0;n=1.0;s=1.0; 
while((fabs(s))>=eps) 
{pi+=s; 
t=n/(2*n+1); 
s*=t; 
n++;} 
pi=pi*2; 
return pi;} 


27.void fun(int m,int *a,int *n) 
{int i,j;*n=0; 
for(i=1;i<=m;i++) 
if(i%7==0//i%11==0) 
{a[j]=i; 
j++;} 
*n=j;} 


28. void fun(int a[],int n, int *max,int *d) 
{int i; 
*max=a[0]; 
*d=0; 
for(i=0;iif(a>*max) 
{*max=a; 
*d=i;}} 


29. void fun(char *ss) 
{int i,n; 
n=strlen(ss); 
for(i=1;iif(ss>=¡¯a¡¯&&ss<=¡¯z¡¯) 
ss=ss-32;} 


30. int fun(int a[][M]) 
{int i,j,max; 
max=a[0][0]; 
for(i=0;i<2;i++) 
for(j=0;jif(a[j]>max) 
max=a[j]; 
return max;}

31. void fun(char *s,char t[]) 
{int i,j,n; 
n=strlen(s); 
for(i=0;iif(i%2==0&s%2==0) 
{t[j]=s[j]; 
j++;} 
t[j]=¡¯\0¡¯;} 


32. void fun(char *s,char t[]) 
{int i,j=0,n; 
n=strlen(s); 
for(i=0;iif(i%2!=0&s%2!=0) 
{t[j]=s[j]; 
j++;} 
t[j]=¡¯\0¡¯;} 


33. void fun(char *a,int n) 
{int i=0,k=0; 
char *p,*t; 
p=t=a; 
while(*t) 
t++; 
t--; 
while(*t--¡¯*¡¯) 
{k++; 
t--;} 
t++; 
if(k>n) 
{while(*p&p{a=*p; 
i++; 
p++;} 
a=¡¯\0¡¯; }} 


34. int fun(STREC*a,STREC *b) 
{int i,j=0,max; 
max=a[0].s; 
for(i=0;iif(a.s==max) 
{*(b+j)=a; 
j++; 
n++;} 
return n;}

35. void fun(char *str) 
{int i=0; 
char *p=str; 
while(*p) 
{if(*p!=¡¯¡¯) 
{str=*p; 
i++;} 
p++;} 
str=¡¯\0¡¯;} 


36. void fun(char *a) 
{int i=0,n=0; 
char *p; 
p=a; 
while (*p==¡¯*¡¯) 
{n++; 
p++;} 
while (*p) 
{a=*p; 
i++; 
p++;} 
while(n!=0) 
{a=¡¯*¡¯; 
i++; 
i--;} 
a=¡¯\0¡¯;} 


37. void fun(STREC *p) 
{double av=0.0; 
int i; 
for(i=0;iav+=p->s; 
av/=N; 
p->ave=av;} 


38. int fun(char *ss,char c) 
{int n=0; 
while(*ss) 
{if(*ss==c) 
n++; 
ss++;} 
return n;} 


39. void fun(int *w,int p,int n) 
{int b[N],i,j=0; 
for(i=0;i<=p;i++) 
b=w; 
for(i=p+1;i{w[j]=w; 
j++;} 
for(i=0;i<=p;i++) 
{w[j]=b; 
j++;}} 


40.void fun(char *w,int m) 
{char b[N]; 
int i,j=0; 
for(i=0;i{b[j]=w; 
j++;} 
for(i=0;iw=w[i+m]; 
for(j=0;j{w=b[j]; 
i++;} 
w=¡¯\0¡¯;}



41. void fun(char (*s)[N],char *b) 
{int i,j,k=0; 
for(j=0;jfor(i=0;i{b[k]=*(*(s+i)+j) 
k++;} 
b[k]=¡¯\0¡¯;} 


42. void fun(int a[][N],int m) 
{int i,j; 
for(j=0;jfor(i=0;i<=j;i++) 
a[j]=a[j]*m;} 


43. char *fun(char (*a)[81],int num) 
{int i; 
char *max; 
max=a[0]; 
for(i=0;iif(strlen(max)max=a; 
return max;} 


44. int fun(char *str,char *substr) 
{int n; 
char *p,*r; 
n=0; 
while(*str) 
{p=str; 
r=substr; 
while(*r) 
if(*r==*p) 
{r++; 
p++;} 
else 
break; 
if(*r==¡¯\0¡¯) 
n++; 
str++;} 
return n;} 


45.void fun(char *a,int n,int h,int e) 
{int i=0; 
char *p; 
for(p=a+h;p{*(a+i)=*p; 
i++;} 
*(a+i)=¡¯\0¡¯;}

46. void fun(STREC a[]) 
{int i,j; 
STREC t; 
for(i=0;ifor(j=i;sif(a.s{t=a; 
a=a[j]; 
a[j]=t; }} 


47. void fun(char *ss) 
{int i,n=0; 
char *p=ss; 
while(*p) 
{n++; 
p++;} 
for (i=0;iif ((ss=¡¯a¡¯&ss<=¡¯z¡¯)&i%2!=0) 
ss=ss-32; 
ss=¡¯\0¡¯;} 


48. void fun(int a,int b,long *c) 
{*c=(a/10)*1000+(b/10)*100+(a%10)*10+b%10;} 


49. void fun(char *s,char t[]) 
{int i,j=0,n=strlen(s); 
for(i=0;iif(i%2==0&s%2!=0) 
else 
{f[j]=s; 
j++;} 
t[j]=¡¯\0¡¯;} 


50. void fun(STU a[],STU *s) 
{int i,max; 
max=a[0].s; 
for (i=0;iif(a.s>max) 
{max=a.s; 
*s=a;}} 


51. void fun(int m,int *k,int xx[]) 
{int i,j; 
int t=0; 
for(i=2;i{j=2; 
while(j{if(i%j==0) 
{xx[t]=i; 
t++; 
break;} 
j++;} 
*k=t;}}



52. void fun(char p1[],char p2[]) 
{int i=0,n=0; 
char *p=p1,*q=p2; 
while (*p) 
{p++; 
n++;} 
i=n; 
while(*p) 
{p1=*q; 
q++; 
i++;} 
p1=¡¯\0¡¯;} 


53. void fun(int a[3][3],int b[3][3]) 
{int i,j,at[3][3]; 
for(i=0;i<=2;i++) 
for(j=0;j<=2;j++) 
at[j]=a[j]; 
for(i=0;i<3;i++) 
for(j=0;j<3;j++) 
b[j]=a[j]+at[j];} 


54. double fun(STREC *a, STREC *b,int *n) 
{double aver=0.0; 
int i,j=0; 
*n=0; 
for (i=0;iaver+=a.s; 
aver/=N; 
for(i=0;iif(a.s{b[j]=a; 
(*n)++; 
j++; } 
return aver;} 


55. void fun(int(*s)[10],int *b,int *n,int mm,int nn) 
{int i,j; 
for(i=0;ifor(j=0;j{b[*n]=*(*(s+i)+j); 
*n=*n+1;}} 


56. void fun(char*a,char *p) 
{int i=0; 
char *p=a; 
while(q<=p) 
{if(*q!=¡¯*¡¯) 
{a=*q; 
i++;} 
q++;} 
while(*q) 
{a=*q; 
i++; 
q++;} 
a=¡¯\0¡¯;}

57.int fun(STREC*a,STREC *b,int l,int h) 
{int i,j=0; 
for(i=0;iif(a.s>=l&a.s<=h) 
{b[j]=a; 
j++;} 
return j;} 


58. double fun(int n) 
{double s=0.0; 
int i; 
for(i=1;iif(i%3==0&i%7==0) 
s=s+i; 
s=sqrt(s); 
return s;} 


59. void fun(char a[M][N],char *b) 
{int i,j,k=0; 
for(i=0;i{for(j=0;jif(*(*(a+i)+j)) 
{b[k]=*(*(a+i)+j) 
k++;} 
else 
break; 
b[k]=¡¯\0¡¯;}} 


60. int fun(int a[],int n) 
{int i,t,j=0,*p=a; 
t=p[0]; 
for(i=0;i<=n;i++) 
if(t==p) 
; 
else 
{a[j]=t; 
t=p; 
j++;} 
if(i>=n) 
a[j]=t; 
return j;} 


61.void fun(int *a,int *b) 
{int i,j; 
for(j=0;ib[j]=0; 
for(i=0;iif(a>=0&a<=9) 
b[0]+=1; 
else if(a>=10&a<=19) 
b[1]+=1; 
else if(a>=20&a<=29) 
b[2]+=1; 
else if(a>=30&a<=39) 
b[3]+=1; 
else if(a>=40&a<=49) 
b[4]+=1; 
else if(a>=50&a<=59) 
b[5]+=1; 
else if(a>=60&a<=69) 
b[6]+=1; 
else if(a>=70&a<=79) 
b[7]+=1; 
else if(a>=80&a<=89) 
b[8]+=1; 
else if(a>=90&a<=99) 
b[9]+=1; 
else 
b[10]+=1;}

62. int fun (char *s) 
{int i,n=0; 
for(i=0;i{if(s=¡¯a¡¯&s<=¡¯z¡¯&s[i+1]==¡¯¡¯ 
¡¬s[i+1]==¡¯\0¡¯) 
n++;} 
return n;} 


63.int fun(int n) 
{int s=0,i; 
for(i=2;i<=n-1;i++) 
if(n%i==0) 
s+=i; 
return s;} 


64. void fun(char *s,char t[]) 
{int i,j=0,n; 
n=strlen(s); 
for(i=0;iif(s%2==0) 
{t[j]=s; 
j++;} 
t[j]=¡¯\0¡¯;} 


65. void fun(int a,int b,long *c) 
{*c=(b%10)*1000+(a/10)*100+(b/10)*10+a%10;} 


66. void fun(char *a) 
{int i=0;char *p=a; 
while(*p) 
{if(*p!=¡¯*¡¯) 
{a=*p; 
i++;} 
p++;} 
a=¡¯\0¡¯;} 


67. STREC fun(STREC*,char *b) 
{int i; 
STREC h; 
for(i=0;iif(strcmp(a.num,b)==0) 
{h=a; 
break; } 
else 
{h.num==""; 
h.s=-1;} 
return h;}



68.sn=1+1/1!+1/2!+1/3!+1/4!+...+1/n! 
double fun(int n) 
{double t,sn=1.0; 
int i,j; 
for(i=1;i{t=1.0; 
for(j=1;j<=i;j++) 
t*j; 
sn+=1.0/t;} 
return sn;} 


69. F(0)=0,F(1)=1,F(n)=F(n-1)+F(n-2) 
int fun(int t) 
{int a=1,b=1,c=0,i; 
for(i=4;i<=t;i++) 
{if(c{c=a+b; 
a=b; 
b=c;} 
else 
break;} 
return c;} 


70. double fun (int n) 
{double s=0.0; 
int i; 
for(i=1;i<=n;i++) 
s=s+1.0/(i*(i+1)); 
return s;}

71. void fun(int a,int b,long *c) 
{*c=(a%10)*1000+(b/10)*100+(a/10)*10+b%10;} 


72. void fun(char *s,char t[]) 
{int i,j=0,n=strlen(s); 
for(i=0;iif(i%2!=0) 
{t[j]=s; 
j++;} 
t[j]=¡¯\0¡¯;} 


73. void fun(char *a,char *h,char *p) 
{int i=0; 
char *q=a; 
while(q{a=*q; 
q++; 
i++;} 
while(q{if(*q!=¡¯¡¯*) 
{a=*q; 
i++;} 
q++;} 
while(*q) 
{a=*q; 
i++; 
q++;} 
a=¡¯\0¡¯;} 


74.int fun(STREC *a,STREC *b) 
{int i,j=0,n=0,min; 
min=a[0].s; 
for(i=0;if(a.smin=a.s; 
for(i=0;if(a.s==min) 
{*(b+j)=a; 
j++; 
n++;} 
return n;}



75. void fun(int (*s)[]10,int *b,int *n,int mm,int nn) 
{int i,j; 
for(j=0;jfor(i=0;i{b[*n]=*(*(s+i)+j); 
*n=*n+1;}} 


76.double fun(double x) 
{double s1=1.0,p=1.0,sum=0.0,s0,t=1.0; 
int n=1; 
do 
{s0=s1; 
sum+=s0; 
t*=n; 
p*=(0.5-n+1)*x; 
s1=p/t; 
n++;}while(fabs(s1-s0)>1e-6); 
return sum;} 


77. void fun(int a,int b,long *c) 
{*c=(b%10)*1000+(a%10)*100+(b/10)*10+a/10;} 


78. void fun(char *s,char t[]) 
{int i,j=0,n=strlen(s); 
for(i=0;iif (s%2!=0) 
{t[j]=s; 
j++;} 
t[j]=¡¯\0¡¯;} 


79. void fun(STU a[],STU *s) 
{int i,min; 
min=a[0].s; 
for(i=0;iif(a.s{min=a.s; 
*s=a;}} 


80. fun(int a[][N],int n) 
{int i,j; 
for(i=0;ifor(j=0;j<=i;j++) 
a[j]=a[j]*n;} 


81. void fun(int a,int b,long *c) 
{*c=(b/10)*1000+(a/10)*100+(b%10)*10+a%10;} 


82. float fun(float *a,int n) 
{float ave=0.0; 
int i; 
for(i=0;iave+=a; 
ave/=n; 
return ave;}



83. void fun(char *a) 
{int i=0; 
char *p,*q; 
p=q=a; 
while(*p) 
p++; 
p--; 
while(*p==¡¯*¡¯) 
p--; 
while(q<=p) 
{a=*q; 
i++; 
q++;} 
a=¡¯\0¡¯;} 


84. void fun(int a,int b,long *c) 
{c=(b/10)*1000+(a%10)*100+(b%10)*10+a/10;} 


85. double fun(STREC *h) 
{double aver=0.0; 
while(h!=NULL) 
{aver+=h->s; 
hy=h->next;} 
aver/=N; 
return aver;} 


86. double fun(double x[10]) 
{int i,j; 
double s=0.0,s1=0.0; 
for(i=0;i<10;i++) 
s1+=x; 
s1/=10; 
for(j=0;j<10;j++) 
s+=(x[j]-s1)*(x[j]-s1); 
s/=10; 
s=pow(s,0.5); 
return s;} 


87. void fun(int a,int b,long *c) 
{*c=(a/10)*1000+(a%10)*10+(b%10)*100+b/10;} 


88. void fun(char *a) 
{int i=0; 
char *p=a; 
while(*p&&*p==¡¯*¡¯) 
{a=*p; 
i++; 
p++;} 
while(*p) 
{if(*p!=¡¯*¡¯) 
{a=*p; 
i++;} 
p++;} 
a=¡¯\0¡¯;}



89. double fun(STREC *a,STREC *b,int *n) 
{double aver=0.0; 
int i,j=0; 
for(i=0;iaver+=a.s; 
aver/=N; 
for(i=0;iif(a.s)>=aver} 
{*(b+j)=a; 
j++;} 
*n=j; 
return aver;} 

90. Sn=(1-1/2)+(1/3-1/4)+...+(1/(2n-1)1/2n). 
double fun(int n) 
{int i; 
double sn=0.0; 
for(i=1;i<=n;i++) 
sn+=(1.0/(2*i-1)-1.0/(2*i)); 
return sn;}

91. void fun(int a,int b,long *c) 
{*c=(a%10)*1000+(b%10)*100+(a/10)*10+b/10;} 


92.double fun(int m) 
{int i; 
double s=0.0,log(double x); 
for(i=1;is=s+log(i); 
s=sqrt(s); 
return s;} 


93. double fun(double x,int n) 
{double s=1.0,p=1.0; 
int i,j,t; 
for(i=1;j<=i;j++) 
{t=1; 
for(j=1;j<=n;i++) 
t=t*j; 
p=p*x; 
s=s+p/t;} 
return s;} 


94. void fun(char *a) 
{int i=0; 
char *p=a; 
while(*p&*p==¡¯*¡¯) 
p++; 
while(*p) 
{a=*p; 
i++; 
p++;} 
a=¡¯\0¡¯;} 



95. void fun(char *a,int n) 
{int i=0,k=0; 
char *t=a; 
while(*t==¡¯*¡¯) 
{k++; 
t++;} 
t=a; 
if(k>n) 
t=a+k-n; 
while(*t) 
{a=*t; 
i++; 
t++;} 
a=¡¯\0¡¯;} 

 96. double fun(double x[9]) 
{double sun=0.0; 
int i,j=1; 
for(i=0;i<9;i++) 
if(j<=8) 
{sun+=sqrt((x+x[i+1])/2.0); 
j++;} 
return sum;} 


97.double fun(int n) 
{int i,j; 
double sum=0.0,t; 
for(i=1;i<=n;i++) 
{t=0.0; 
for(j=1;j<=i;j++) 
t+=j; 
sum+=1.0/t;} 
return sum;} 


98. double fun(int n) 
{int i; 
double sum=0.0; 
for(i=1;i<=n;i++) 
if(i%5==0¡¬i%9==0) 
sun+=1.0/i; 
return sum;}

99. double fun(int n) 
{int m,k,i; 
double s=0.0; 
for(m=3;m<=n;m++) 
{k=sqrt(m); 
for(i=2;i<=k;i++) 
if (m%i==0) break; 
if(i>=k+1) 
s+=sqrt(m);} 
return s;} 


100. double fun(int n) 
{int i; 
double s=1.0,p=1.0; 
for(i=2;i<=n;i++) 
{p+=pow(i,0.5); 
s+=p;} 
return s;}

 
